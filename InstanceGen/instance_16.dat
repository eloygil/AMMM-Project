/*********************************************
 * OPL 12.6.0.0 Data
 * Author: Eloy Gil Guerrero
 * Email: eloy.gil@est.fib.upc.edu
 * Creation Date: 14/01/2017 at 23:00:42
 *********************************************/

nP = 16;        // number of destination points
workTime = 720; // maximum time to finish (12h in minutes) 

// time (minutes) spent in a task in each point 
task = [ 10 16 1 9 11 1 2 4 7 9 16 2 15 13 18 3 1 ];

              //  min  max
task_window = [[   94  174 ] // 1 
               [   86  172 ] // 2 
               [  166  207 ] // 3 
               [   98  140 ] // 4 
               [   99  170 ] // 5 
               [   91  122 ] // 6 
               [   92  137 ] // 7 
               [   74  117 ] // 8 
               [   80  124 ] // 9 
               [   92  132 ] // 10 
               [  120  156 ] // 11 
               [   80  125 ] // 12 
               [   68  133 ] // 13 
               [   87  150 ] // 14 
               [   99  127 ] // 15 
               [  157  177 ] // 16 
]; 

       //     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16     S 
dist = [[     0    92    31    23    96    15    56    91    41    61   101    70     3    12    86    41    50  ] // 1
        [    92     0   118   108    39    67    89    29   102   118    99    42    63    64    87     6   103  ] // 2
        [    31   118     0   113     7    60   120    53    39    69    68    77    36   110   110     9    41  ] // 3
        [    23   108   113     0    21    95    52    61    81    46    42    68    25   109    36     3    97  ] // 4
        [    96    39     7    21     0    97    45     1    55     9    55    93    78    28   102    46    75  ] // 5
        [    15    67    60    95    97     0    74    16    83   113    76    11    72    45    93     4    35  ] // 6
        [    56    89   120    52    45    74     0   114    15   102    12    25    23   104    19   111   112  ] // 7
        [    91    29    53    61     1    16   114     0    20   119    35    95     2    33    40    26    60  ] // 8
        [    41   102    39    81    55    83    15    20     0    94   115    73   102    92    97    96    93  ] // 9
        [    61   118    69    46     9   113   102   119    94     0    43    88    66    27    54    97    12  ] // 10
        [   101    99    68    42    55    76    12    35   115    43     0    96     5    72    24    49    80  ] // 11
        [    70    42    77    68    93    11    25    95    73    88    96     0    27    85   115    25    17  ] // 12
        [     3    63    36    25    78    72    23     2   102    66     5    27     0    91    87    50    99  ] // 13
        [    12    64   110   109    28    45   104    33    92    27    72    85    91     0    94     2    10  ] // 14
        [    86    87   110    36   102    93    19    40    97    54    24   115    87    94     0    79   100  ] // 15
        [    41     6     9     3    46     4   111    26    96    97    49    25    50     2    79     0    46  ] // 16
        [    50   103    41    97    75    35   112    60    93    12    80    17    99    10   100    46     0  ] // S
];